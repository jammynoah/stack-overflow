{"ast":null,"code":"// import React from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import axios from '../../config/axiosConfig';\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const ForgotPassword = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       email: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n//     }),\n//     onSubmit: (values) => {\n//       axios\n//         .post(\"user/forgetPassword\", values)\n//         .then((response) => {\n//           toast.success(\"Email sent successfully\");\n//         })\n//         .catch((error) => {\n//           if (error.response) {\n//             if (error.response.status === 404) {\n//               toast.error(\"Email not found\");\n//             } else {\n//               toast.error(\"Server error\");\n//             }\n//           } else {\n//             toast.error(\"Network error\");\n//           }\n//         });\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <h2>Forgot Password</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"email\">Email Address</label>\n//           <input\n//             id=\"email\"\n//             name=\"email\"\n//             type=\"email\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.email}\n//           />\n//           {formik.touched.email && formik.errors.email ? (\n//             <div>{formik.errors.email}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <button type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ForgotPassword;","map":{"version":3,"names":[],"sources":["C:/Users/SAHIL/Dropbox/Stack-overflow/client/src/pages/Forgot-password/FotgotPassword.jsx"],"sourcesContent":["// import React from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import axios from '../../config/axiosConfig';\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const ForgotPassword = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       email: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n//     }),\n//     onSubmit: (values) => {\n//       axios\n//         .post(\"user/forgetPassword\", values)\n//         .then((response) => {\n//           toast.success(\"Email sent successfully\");\n//         })\n//         .catch((error) => {\n//           if (error.response) {\n//             if (error.response.status === 404) {\n//               toast.error(\"Email not found\");\n//             } else {\n//               toast.error(\"Server error\");\n//             }\n//           } else {\n//             toast.error(\"Network error\");\n//           }\n//         });\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <h2>Forgot Password</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"email\">Email Address</label>\n//           <input\n//             id=\"email\"\n//             name=\"email\"\n//             type=\"email\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.email}\n//           />\n//           {formik.touched.email && formik.errors.email ? (\n//             <div>{formik.errors.email}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <button type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ForgotPassword;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}