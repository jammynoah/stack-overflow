{"ast":null,"code":"// import React from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import axios from \"../../config/axiosConfig\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const ResetPassword = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       newPassword: \"\",\n//       confirmPassword: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n//       confirmPassword: Yup.string()\n//         .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n//         .required(\"Required\"),\n//     }),\n//     onSubmit: (values) => {\n//       const { newPassword } = values;\n//       const token = window.location.pathname.split(\"/\").pop();\n\n//       axios\n//         .post(`/user/reset-password/${token}`, { newPassword })\n//         .then((response) => {\n//           toast.success(response.data.message);\n//           setTimeout(() => {\n//             window.location.href = \"/Auth\";\n//           }, 3000);\n//         })\n//         .catch((error) => {\n//           toast.error(\"Your link has expired\");\n//         });\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <h2>Reset Password</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"newPassword\">New Password</label>\n//           <input\n//             id=\"newPassword\"\n//             name=\"newPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.newPassword}\n//           />\n//           {formik.touched.newPassword && formik.errors.newPassword ? (\n//             <div>{formik.errors.newPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <label htmlFor=\"confirmPassword\">Confirm Password</label>\n//           <input\n//             id=\"confirmPassword\"\n//             name=\"confirmPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.confirmPassword}\n//           />\n//           {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n//             <div>{formik.errors.confirmPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <button type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;","map":{"version":3,"names":[],"sources":["C:/Users/SAHIL/Dropbox/Stack-overflow/client/src/pages/Forgot-password/ResetPassword.jsx"],"sourcesContent":["// import React from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import axios from \"../../config/axiosConfig\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const ResetPassword = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       newPassword: \"\",\n//       confirmPassword: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n//       confirmPassword: Yup.string()\n//         .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n//         .required(\"Required\"),\n//     }),\n//     onSubmit: (values) => {\n//       const { newPassword } = values;\n//       const token = window.location.pathname.split(\"/\").pop();\n\n//       axios\n//         .post(`/user/reset-password/${token}`, { newPassword })\n//         .then((response) => {\n//           toast.success(response.data.message);\n//           setTimeout(() => {\n//             window.location.href = \"/Auth\";\n//           }, 3000);\n//         })\n//         .catch((error) => {\n//           toast.error(\"Your link has expired\");\n//         });\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <h2>Reset Password</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"newPassword\">New Password</label>\n//           <input\n//             id=\"newPassword\"\n//             name=\"newPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.newPassword}\n//           />\n//           {formik.touched.newPassword && formik.errors.newPassword ? (\n//             <div>{formik.errors.newPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <label htmlFor=\"confirmPassword\">Confirm Password</label>\n//           <input\n//             id=\"confirmPassword\"\n//             name=\"confirmPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.confirmPassword}\n//           />\n//           {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n//             <div>{formik.errors.confirmPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <button type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}