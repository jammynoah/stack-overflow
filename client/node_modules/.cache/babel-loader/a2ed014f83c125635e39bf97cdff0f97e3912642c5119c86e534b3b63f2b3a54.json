{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAHIL\\\\Dropbox\\\\Stack-overflow\\\\client\\\\src\\\\pages\\\\Forgot-password\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import axios from \"../../config/axiosConfig\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const ResetPassword = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       newPassword: \"\",\n//       confirmPassword: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n//       confirmPassword: Yup.string()\n//         .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n//         .required(\"Required\"),\n//     }),\n//     onSubmit: (values) => {\n//       const { newPassword } = values;\n//       const token = window.location.pathname.split(\"/\").pop();\n\n//       axios\n//         .post(`/user/reset-password/${token}`, { newPassword })\n//         .then((response) => {\n//           toast.success(response.data.message);\n//           setTimeout(() => {\n//             window.location.href = \"/Auth\";\n//           }, 3000);\n//         })\n//         .catch((error) => {\n//           toast.error(\"Your link has expired\");\n//         });\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <h2>Reset Password</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"newPassword\">New Password</label>\n//           <input\n//             id=\"newPassword\"\n//             name=\"newPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.newPassword}\n//           />\n//           {formik.touched.newPassword && formik.errors.newPassword ? (\n//             <div>{formik.errors.newPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <label htmlFor=\"confirmPassword\">Confirm Password</label>\n//           <input\n//             id=\"confirmPassword\"\n//             name=\"confirmPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.confirmPassword}\n//           />\n//           {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n//             <div>{formik.errors.confirmPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <button type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../config/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../Auth/Auth.css\";\nimport icon from \"../../assets/icon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      newPassword: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n      confirmPassword: Yup.string().oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\").required(\"Required\")\n    }),\n    onSubmit: values => {\n      const {\n        newPassword\n      } = values;\n      const token = window.location.pathname.split(\"/\").pop();\n      axios;\n      //         .post(`/user/reset-password/${token}`, { newPassword })\n      //         .then((response) => {\n      //           toast.success(response.data.message);\n      //           setTimeout(() => {\n      //             window.location.href = \"/Auth\";\n      //           }, 3000);\n      //         })\n      //         .catch((error) => {\n      //           toast.error(\"Your link has expired\");\n      //         });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"auth-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"stack overflow\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"newPassword\",\n              name: \"newPassword\",\n              type: \"password\",\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              value: formik.values.newPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), formik.touched.newPassword && formik.errors.newPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: formik.errors.newPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              value: formik.values.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: formik.errors.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"auth-btn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useFormik","Yup","axios","toast","icon","jsxDEV","_jsxDEV","ResetPassword","_s","formik","initialValues","newPassword","confirmPassword","validationSchema","object","string","required","min","oneOf","ref","onSubmit","values","token","window","location","pathname","split","pop","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","name","type","onChange","handleChange","onBlur","handleBlur","value","touched","errors","_c","$RefreshReg$"],"sources":["C:/Users/SAHIL/Dropbox/Stack-overflow/client/src/pages/Forgot-password/ResetPassword.jsx"],"sourcesContent":["// import React from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import axios from \"../../config/axiosConfig\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const ResetPassword = () => {\n//   const formik = useFormik({\n//     initialValues: {\n//       newPassword: \"\",\n//       confirmPassword: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n//       confirmPassword: Yup.string()\n//         .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n//         .required(\"Required\"),\n//     }),\n//     onSubmit: (values) => {\n//       const { newPassword } = values;\n//       const token = window.location.pathname.split(\"/\").pop();\n\n//       axios\n//         .post(`/user/reset-password/${token}`, { newPassword })\n//         .then((response) => {\n//           toast.success(response.data.message);\n//           setTimeout(() => {\n//             window.location.href = \"/Auth\";\n//           }, 3000);\n//         })\n//         .catch((error) => {\n//           toast.error(\"Your link has expired\");\n//         });\n//     },\n//   });\n\n//   return (\n//     <div>\n//       <h2>Reset Password</h2>\n//       <form onSubmit={formik.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"newPassword\">New Password</label>\n//           <input\n//             id=\"newPassword\"\n//             name=\"newPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.newPassword}\n//           />\n//           {formik.touched.newPassword && formik.errors.newPassword ? (\n//             <div>{formik.errors.newPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <label htmlFor=\"confirmPassword\">Confirm Password</label>\n//           <input\n//             id=\"confirmPassword\"\n//             name=\"confirmPassword\"\n//             type=\"password\"\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             value={formik.values.confirmPassword}\n//           />\n//           {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n//             <div>{formik.errors.confirmPassword}</div>\n//           ) : null}\n//         </div>\n//         <div>\n//           <button type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\n\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../config/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../Auth/Auth.css\"\nimport icon from \"../../assets/icon.png\";\n\nconst ResetPassword = () => {\n  const formik = useFormik({\n    initialValues: {\n      newPassword: \"\",\n      confirmPassword: \"\",\n    },\n    validationSchema: Yup.object({\n      newPassword: Yup.string().required(\"Required\").min(6, \"Too Short!\"),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      const { newPassword } = values;\n      const token = window.location.pathname.split(\"/\").pop();\n\n      axios\n      //         .post(`/user/reset-password/${token}`, { newPassword })\n      //         .then((response) => {\n      //           toast.success(response.data.message);\n      //           setTimeout(() => {\n      //             window.location.href = \"/Auth\";\n      //           }, 3000);\n      //         })\n      //         .catch((error) => {\n      //           toast.error(\"Your link has expired\");\n      //         });\n    },\n  });\n\n  return (\n    <section className=\"auth-section\">\n\n   \n    <div className=\"auth-container-2\">\n    <img src={icon} alt=\"stack overflow\" className=\"login-logo\" />\n      <h2>Reset Password</h2>\n      <form onSubmit={formik.handleSubmit}>\n        <div>\n          <label htmlFor=\"newPassword\">\n          <h4>New Password</h4>\n          <input\n            id=\"newPassword\"\n            name=\"newPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.newPassword}\n          />\n          </label>\n         \n          {formik.touched.newPassword && formik.errors.newPassword ? (\n            <div>{formik.errors.newPassword}</div>\n          ) : null}\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">\n            <h4>Confirm Password</h4>\n            <input\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.confirmPassword}\n          />\n          </label>\n         \n          {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n            <div>{formik.errors.confirmPassword}</div>\n          ) : null}\n        </div>\n        \n          <button className=\"auth-btn\" type=\"submit\">Submit</button>\n       \n      </form>\n    </div>\n    </section>\n  );\n};\n\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}